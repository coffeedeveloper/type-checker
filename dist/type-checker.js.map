{"version":3,"sources":["../lib/main.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,MAAI,EAAE,GAAG,EAAE,CAAC;;AAGZ,MAAM,QAAQ,GAAG,SAAX,QAAQ,CAAI,CAAC;WAAK,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;GAAA,CAAC;;;;;;;;;;AAU1D,IAAE,CAAC,MAAM,GAAG,UAAC,CAAC,EAAE,CAAC;WAAK,QAAQ,CAAC,CAAC,CAAC,kBAAgB,CAAC,MAAG;GAAA,CAAC;;;;;;;;;AAStD,IAAE,CAAC,OAAO,GAAG,UAAC,CAAC;WAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;GAAA,CAAC;;AAEzE,GAAC,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC,EAAK;AAC3F,MAAE,QAAM,CAAC,CAAG,GAAG,UAAC,CAAC;aAAK,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;KAAA,CAAC;GACvC,CAAC,CAAC;;;;;;;;;AASH,IAAE,CAAC,OAAO,GAAG,CAAC;WAAM,SAAS,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,UAAC,CAAC;aAAK,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,OAAO,CAAC;KAAA;IAAA,EAAG,CAAC;;;;;;mBAM1E,EAAE","file":"type-checker.js","sourcesContent":["let tc = {};\n\n\nconst toString = (v) => Object.prototype.toString.call(v);\n\n/**\n * 判断变量是否是指定类型\n * @function\n * @name isType\n * @param {*} v 任何数据类型的变量\n * @param {string} t 需要判断的类型\n * @return {bool} 是否与需要判断的类型一致\n */\ntc.isType = (v, t) => toString(v) === `[object ${t}]`;\n\n/**\n * get variable type string\n * @function\n * @name getType\n * @param  {*} v any type variable\n * @return {string}   type string\n */\ntc.getType = (v) => toString(v).replace('[object ', '').replace(']', '');\n\n['String', 'Date', 'Number', 'Function', 'RegExp', 'Null', 'Undefined', 'Object'].map((t) => {\n  tc[`is${t}`] = (v) => tc.isType(v, t);\n});\n\n/*\n * 判断变量是否是数组\n * @function\n * @name isArray\n * @param {*} v 变量\n * @return {bool} 是否是数组\n */\ntc.isArray = (() => 'isArray' in Array ? Array.isArray : (v) => tc.isType(v, 'Array'))();\n\n/**\n * 类型检查器，能够适用于node.js / browser\n * @module type-checker\n */\nexport default tc;\n"]}